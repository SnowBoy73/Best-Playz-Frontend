{"version":3,"sources":["ws (ignored)","./src/environments/environment.ts","./src/app/shared/storage.service.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {ClientModel} from '../comment/shared/client.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n    saveClient(commentClient: ClientModel): void {\n      localStorage.setItem('client', JSON.stringify(commentClient));\n  }\n\n  loadClient(): ClientModel | undefined {\n    const commentClientString = localStorage.getItem('client');\n    if (commentClientString) {\n      const commentClient: ClientModel = JSON.parse(commentClientString);\n      return commentClient;\n    }\n    return undefined;\n  }\n\n  deleteClient(id: string): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    FormsModule,\n    MatButtonModule,\n    MatListModule,\n  ]\n})\nexport class SharedModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {CommentService} from './comment/shared/comment.service';\nimport {StorageService} from './shared/storage.service';\nimport {CommentComponent} from './comment/comment.component';\nimport {ClientModel} from './comment/shared/client.model';\nimport {FormControl} from '@angular/forms';\nimport {Socket} from 'ngx-socket-io';\nimport {loginDto} from './comment/shared/login.dto';\nimport {WelcomeDto} from './comment/shared/welcome.dto';\nimport {takeUntil} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'Best-Playz-Frontend';\n  isLoggedIn = localStorage.length;\n  userNickname: string | undefined;\n  loggedInUser: ClientModel | undefined;\n  loginRequest: boolean | undefined;\n  loginFC = new FormControl('');\n  unsubscribe$ = new Subject();\n\n  constructor(\n    private storageService: StorageService,\n    private socket: Socket,\n  ) { }\n\n  ngOnInit(): void {\n    this.listenForCommentWelcome()\n      .pipe(\n        takeUntil(this.unsubscribe$)\n      )\n      .subscribe(welcome => {\n        // this.comments = welcome.comments;\n        this.loggedInUser = welcome.client;\n        this.storageService.saveClient(this.loggedInUser);\n        console.log('saved LIU: ', this.loggedInUser.nickname);\n        location.reload();\n\n      });\n    const oldClient = this.storageService.loadClient();\n    console.log('Old Client id: ' + oldClient?.id + ' nickname: ' + oldClient?.nickname);\n    if (oldClient) {\n      this.loggedInUser = this.storageService.loadClient();\n      console.log('Client id: ' + this.loggedInUser?.id + ' nickname: ' + this.loggedInUser?.nickname);\n      this.connect(); // MUY IMPORTANTÉ!!\n    }\n  }\n\n\n  listenForCommentWelcome(): Observable < WelcomeDto > { // to service?\n    return this.socket\n      .fromEvent<WelcomeDto>('welcome');\n    // location.reload(); // doesn't work\n\n  }\n\n\n    /* Can put global error listening here (from comment service)!!\n    listenForErrors(): Observable<string> {\n      return this.socket\n        .fromEvent<string>('error');\n   */\n\n  login(): void {\n    this.loginRequest = true;\n  }\n\n  sendLogin(): void { // should really be in a service but ... you know...\n    console.log('sendLogin method');\n    if (this.loginFC.value) {\n      const dto: loginDto = {nickname: this.loginFC.value};\n      console.log(dto.nickname);\n      this.socket.emit('login', dto);\n      this.loginRequest = false;\n    }\n  }\n\n  logout(): void {\n    console.log('Logout called in App Comp');\n    this.loggedInUser = this.storageService.loadClient();\n    console.log('logout id :', this.storageService.loadClient()?.id);\n    if (this.loggedInUser !== undefined) {\n      console.log('logout id is DEFINED as:', this.storageService.loadClient()?.id);\n      this.socket.emit('logout', this.loggedInUser.id);\n      // this.storageService.deleteClient(this.loggedInUser.id);  // Better, but not working... why??!\n      localStorage.clear();  // Brutal, but works for now\n      console.log('local storage cleared:', this.storageService.loadClient()?.id);\n      location.reload();\n    } else {\n      console.log('logout id == undefined:', this.storageService.loadClient()?.nickname);\n    }\n  }\n\n\n  connect(): void{ // to service?\n    this.socket.connect();\n  }\n\n  disconnect(): void{ // to service?\n    this.socket.disconnect();\n  }\n}\n","\n\n<div fxLayout=\"column\" fxFill fxLayoutGap=\"10px\"  *ngIf=\"loginRequest !== true\">\n  <div fxLayout=\"row\">\n    <a routerLink=\"/\">Home</a>----\n    <a routerLink=\"/leaderboard\">Leaderboard</a>----\n    <a routerLink=\"/comment\">Comments</a>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFlex *ngIf=\"isLoggedIn == 0\">\n\n        <h4>Not logged in</h4>\n\n      <button (click)=\"login()\">LogIn</button>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFlex *ngIf=\"isLoggedIn !== 0\">\n        <h4 > Logged in as {{loggedInUser?.nickname}} </h4>\n\n      <button (click)=\"logout()\">Logout</button>\n    </div>\n  </div>\n  <router-outlet class=\"router-flex\"></router-outlet>\n\n</div>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFlex *ngIf=\"loginRequest == true\"  style=\"padding: 20px\" fxLayoutGap=\"10px\">\n  <mat-card fxFlex=\"27\">\n\n    <mat-card-header fxLayoutAlign=\"center top\">\n      <mat-card-title fxLayoutAlign=\"center top\" style=\"font-size: x-large; font-family: 'American Typewriter'\">Welcome to</mat-card-title>\n      <mat-card-title style=\"font-size: xxx-large; font-family: 'American Typewriter'\">Best Playz</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n      <mat-form-field class=\"primary-text-colour\" fxFlex>\n        <mat-label>Enter Nickname</mat-label>\n        <input matInput type=\"text\" [formControl]=\"loginFC\">\n        <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"sendLogin()\">\n          <mat-icon>send</mat-icon>\n        </button>\n      </mat-form-field>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SocketIoConfig, SocketIoModule } from 'ngx-socket-io';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\n\nconst config: SocketIoConfig = { url: 'http://localhost:3000', options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SocketIoModule.forRoot(config),\n    BrowserAnimationsModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'comment', loadChildren: () => import('./comment/comment.module').then(m => m.CommentModule) },\n  { path: 'leaderboard', loadChildren: () => import('./leaderboard/leaderboard.module').then(m => m.LeaderboardModule) }\n  ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}